# Copyright 2013 Thatcher Peskens
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM ubuntu:16.04

MAINTAINER Dockerfiles

# Install required packages and remove the apt packages cache when done.

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
    gettext-base \
    git \
    python \
    python-dev \
    python-setuptools \
    python-pip \
    nginx \
    supervisor \
    sqlite3 && \
    pip install -U pip setuptools && \
  	rm -rf /var/lib/apt/lists/*

# install uwsgi now because it takes a little while
RUN pip install uwsgi

# COPY requirements.txt and RUN pip install BEFORE adding the rest of your code, this will cause Docker's caching mechanism
# to prevent re-installinig (all your) dependencies when you made a change a line or two in your app.
COPY app/requirements.txt /tmp/
RUN pip install -r /tmp/requirements.txt

# this allows to build different docker for each django application
# but with shared volumes
ARG APP_NAME
ARG DOMAIN_NAME
ENV APP_NAME ${APP_NAME:-app}
ENV DOMAIN_NAME ${DOMAIN_NAME:-django.docker.local}

# setup all the configfiles
COPY supervisor-app.conf /tmp/
COPY nginx-app.conf /tmp/
RUN echo "daemon off;" >> /etc/nginx/nginx.conf
RUN envsubst < /tmp/nginx-app.conf > /etc/nginx/sites-available/default  && \
    envsubst < /tmp/supervisor-app.conf > /etc/supervisor/conf.d/supervisor-app.conf

# COPY uwsgi settings
COPY uwsgi_params /etc/nginx/
COPY uwsgi.ini /tmp/
RUN envsubst < /tmp/uwsgi.ini > /etc/nginx/uwsgi.ini

# COPY the script executed the first boot to initialize the /srv folder
# this step needs to be done an run since /srv should be mounted externally
COPY initialize-srv.sh /usr/local/bin/
RUN chmod 775 /usr/local/bin/initialize-srv.sh && \
    chown www-data /usr/local/bin/initialize-srv.sh

VOLUME /srv

# TODO change from sed to envsubst

EXPOSE 80
CMD ["supervisord", "-n"]
